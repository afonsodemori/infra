#!/bin/bash

source .env

container_name="${SERVER_SIMULATION_NAME:?}"
image_name=${SERVER_SIMULATION_IMAGE:?}
infra_dir=${INFRA_DIR:?}
data_dir=${DATA_DIR:?}

if docker ps --filter "name=$container_name" --filter "status=running" | grep -q "$container_name"; then
     echo "Container $container_name is already running."
     echo "Hit <ENTER> to log into the existing container or type 'new' and hit <ENTER> to destroy it and create a new one."
     read -rp "> " response

     if [[ $response == "new" ]]; then
         echo "Stopping $container_name..."
         # shellcheck disable=SC2086
         docker stop $container_name
     else
        docker exec -it "$container_name" bash --login
        exit 0
     fi
fi

echo "Starting a new $container_name..."
read -rp "Mount the current directory inside the container? (yes/NO) " response

mount=""
if [[ $response == "yes" ]]; then
    mount="--volume .:$infra_dir:ro --workdir=$infra_dir"
fi

# shellcheck disable=SC2086
docker run \
    --rm \
    --name=$container_name \
    --hostname=$container_name \
    --interactive \
    --tty \
    --detach \
    --privileged \
    $mount \
    --volume "$data_dir:$data_dir" \
    --volume "/var/run/docker.sock:/var/run/docker.sock" \
    $image_name

docker exec -it "$container_name" bash --login
