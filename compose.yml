services:

  nginx:
    image: nginx:1-alpine
    volumes:
      - ${INFRA_DIR:?}/docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ${INFRA_DIR:?}/docker/nginx/html:/usr/share/nginx/html:ro
      - ${DATA_DIR:?}/letsencrypt/data:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - jrbaena
      - meteosaucana
      - phpmyadmin
      - sophia
      - spring-playground
    networks:
      - infra_network
    restart: always

  letsencrypt: # to be run via bin/letsencrypt
    image: registry.gitlab.com/afonsodemori/infra/letsencrypt:latest
    environment:
      EMAIL_ADDRESS: ${LETSENCRYPT_EMAIL_ADDRESS:?}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:?}
    volumes:
      - ${DATA_DIR:?}/letsencrypt/logs:/var/log/letsencrypt
      - ${DATA_DIR:?}/letsencrypt/data:/etc/letsencrypt
    restart: no

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - infra_network
    restart: always

  mariadb:
    image: mariadb:11
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:?}
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ${DATA_DIR:?}/mariadb:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - infra_network
    restart: always

  phpmyadmin:
    image: phpmyadmin:5
    environment:
      HIDE_PHP_VERSION: 1
      PMA_ARBITRARY: 1
      PMA_HOSTS: ${PHP_MY_ADMIN_HOSTS:?}
      UPLOAD_LIMIT: 104857600
      PMA_ABSOLUTE_URI: https://phpmyadmin
    hostname: phpmyadmin
    networks:
      - infra_network
    restart: always

  sonar:
    image: sonarqube:10-community
    environment:
      SONAR_HOST_URL: ${SONAR_HOST_URL:?}
      SONAR_JDBC_URL: ${SONAR_JDBC_URL:?}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME:?}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD:?}
    volumes:
      - sonar_conf:/opt/sonarqube/conf
      - sonar_data:/opt/sonarqube/data
      - sonar_logs:/opt/sonarqube/logs
      - sonar_extensions:/opt/sonarqube/extensions
    depends_on:
      - postgres
    networks:
      - infra_network
    restart: always

  spring-playground:
    image: registry.gitlab.com/afonsodemori/spring-playground:latest
    platform: linux/amd64
    environment:
      DB_URL: ${SPRING_PLAYGROUND_DB_HOST:?}
      DB_PORT: ${SPRING_PLAYGROUND_DB_PORT:?}
      DB_NAME: ${SPRING_PLAYGROUND_DB_NAME:?}
      DB_USER: ${SPRING_PLAYGROUND_DB_USER:?}
      DB_PASS: ${SPRING_PLAYGROUND_DB_PASS:?}
    depends_on:
      - mariadb
    networks:
      - infra_network
    restart: always

  sophia:
    image: registry.gitlab.com/afonsodemori/sophia-web:latest
    environment:
      APP_ENV: prod
      DATABASE_URL: ${SOPHIA_DATABASE_DSN:?}
    networks:
      - infra_network
    restart: always

  meteosaucana:
    image: registry.gitlab.com/afonsodemori/meteosaucana:latest
    environment:
      DB_HOST: ${METEOSAUCANA_DB_HOST:?}
      DB_PORT: ${METEOSAUCANA_DB_PORT:?}
      DB_NAME: ${METEOSAUCANA_DB_NAME:?}
      DB_USER: ${METEOSAUCANA_DB_USER:?}
      DB_PASS: ${METEOSAUCANA_DB_PASS:?}
    depends_on:
      - mariadb
    networks:
      - infra_network
    restart: always

  jrbaena:
    image: registry.gitlab.com/afonsodemori/jrbaena:latest
    environment:
      DB_HOST: ${JRBAENA_DB_HOST:?}
      DB_PORT: ${JRBAENA_DB_PORT:?}
      DB_NAME: ${JRBAENA_DB_NAME:?}
      DB_USER: ${JRBAENA_DB_USER:?}
      DB_PASS: ${JRBAENA_DB_PASS:?}
    depends_on:
      - mariadb
    networks:
      - infra_network
    restart: always

networks:
  infra_network:
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  sonar_conf:
  sonar_data:
  sonar_logs:
  sonar_extensions:
